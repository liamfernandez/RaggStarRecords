---
import { navLabels } from "../strings"

export interface Props {
	title: string;
}
const { title } = Astro.props;

let pageClasses: Map<string,string> = new Map<string,string>();
const pages = ["", "services", "about", "discography"]
pages.forEach((path) => {
	if (path === Astro.url.pathname.substring(1)) {
		pageClasses.set(path, "bg-gradient-to-bl from-[#1c82e1] to-emerald-400 p-[2px] rounded-xl flex justify-center");
	}
	else {
		pageClasses.set(path, "wait-for-hov p-[2px] rounded-xl flex justify-center");
	}
})
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/main-logo-no-bg.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<nav>
			<div class="bg-[white] flex justify-between items-center pb-1 pt-2 px-8">
				<img class="h-28 rounded-xl" src="/main-logo-raggstar.jpg" />
				<span class="flex gap-12">
					{pages.map((page) => {
						return (
						<div class={pageClasses.get(page)}>
							<a href={`/${page}`} 
								class="text-black bg-white font-Druk tracking-wide rounded-xl py-2 px-2 ">
								{navLabels[page].toUpperCase()}
							</a>
						</div>
						);
					})}
				</span>
			</div>
			<hr />
		</nav>
		<slot />
		<hr />
		<footer>
			<div class=" flex justify-center flex-col pt-8 pb-6 gap-6 items-center">
				<span class="bg-white flex gap-4 flex-row">
					<a href="https://www.instagram.com/raggstarrecords/">
						<img src="../socials/IG.svg"  class="h-[25px]"/>
					</a>
					<a href="https://www.tiktok.com/@raggstarrecords">
						<img src="../socials/TikTok.svg"  class="h-[25px]"/>
					</a>
					<a href="https://www.youtube.com/@raggstarrecords3739">
						<img src="../socials/YouTube.svg" class="h-[25px]"/>
					</a>
				</span>
				<span class="text-xs">
					Â© 2023 RAGGSTARRECORDS | Atlanta, GA
				</span>
			</div>
		</footer>
	</body>
</html>
<style>
	@font-face {
		font-family: 'FuturaLTW01-Medium';
		src: url('../Futura LT W01 Medium.ttf') format('ttf');
		src: url('../Futura LT W01 Medium.woff') format('woff');
		src: url('../Futura LT W01 Medium.woff2') format('woff2');
	}

	@font-face {
		font-family: 'Druk';
		src: url('../DrukWide-Medium.ttf') format('ttf');
		src: url('../DrukWide-Medium.woff') format('woff');
	}

	.wait-for-hov {
		background: linear-gradient(to top right, rgb(52 211 153),rgb(28, 130, 225)) no-repeat
		calc(200% - var(--i,0)*100%) 100% / 200% calc(100%*var(--i,0) + .08em); 
		transition: .2s calc(var(--i,0)*.2s), background-position .2s calc(.2s - calc(var(--i,0)*.2s));
	}

	.wait-for-hov:hover {
		--i:1;
	}

	h1 {
		text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6);
	}
</style>