---
import { navLabels } from "../strings"

export interface Props {
	title: string;
}
const { title } = Astro.props;

let pageClasses: Map<string,string> = new Map<string,string>();
const pages = [...navLabels.keys()]
pages.forEach((path) => {
	if (path === Astro.url.pathname.substring(1)) {
		pageClasses.set(path, "bg-gradient-to-bl from-[#1c82e1] to-emerald-400 p-[2px] rounded-xl flex justify-center");
	}
	else {
		pageClasses.set(path, "wait-for-hov p-[2px] rounded-xl flex justify-center");
	}
})
---

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/main-logo-no-bg.png" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body class="drawer drawer-end md:block">
		<!-- <form id="close-drawer"> -->
			<input id="my-drawer-4" type="checkbox" class="drawer-toggle" />
		<!-- </form> -->
		<div class="drawer-content">
			<nav>
				<!-- MOBILE NAV ABOVE -->
				<div class="bg-[white] flex justify-between items-center pb-1 md:pt-2 pl-1 pr-10 md:px-8">
					<img class="md:h-28 h-20" src="/main-logo-raggstar.jpg" />
					<label for="my-drawer-4" class="md:hidden">
						<img src="./hambergermenu.svg" />
					</label>
					<span class="hidden md:flex md:gap-12">
						{pages.map((page) => {
							return (
							<div class={pageClasses.get(page)}>
								<a href={`/${page}`} 
									class="text-black text-[8px] md:text-base bg-white font-Druk tracking-wide rounded-xl md:py-2 py-[1px] px-[1px] md:px-2 ">
									{navLabels.get(page)?.toUpperCase()}
								</a>
							</div>
							);
						})}
					</span>
				</div>
				<hr />
			</nav>
			<slot />
			<hr />
			<footer>
				<div class="flex bg-white justify-center flex-col pt-4 md:pt-8 pb-4 md:pb-6 gap-4 md:gap-6 items-center">
					<span class=" flex md:gap-4 gap-8 flex-row">
						<a href="https://www.instagram.com/raggstarrecords/">
							<img src="../socials/IG.svg"  class="h-[25px]"/>
						</a>
						<a href="https://www.tiktok.com/@raggstarrecords">
							<img src="../socials/TikTok.svg"  class="h-[25px]"/>
						</a>
						<a href="https://www.youtube.com/@raggstarrecords3739">
							<img src="../socials/YouTube.svg" class="h-[25px]"/>
						</a>
					</span>
					<span class="md:text-xs text-[10px] text-black">
						Â© 2023 RAGGSTARRECORDS | Atlanta, GA
					</span>
				</div>
			</footer>
		</div>
		<div class="drawer-side">
			<label for="my-drawer-4" class="drawer-overlay"></label>
			<ul class="flex flex-col gap-4 pt-10 w-[47%] h-full bg-base-200">
				<label for="my-drawer-4" class={`btn btn-circle self-end bg-white scale-[0.72] mr-7 -mt-5 text-lg text-black`}>X</label>
				<!-- Sidebar content here -->
				{pages.map((page) => {
					return (
						<li>
							<a class="pl-6 font-Druk text-sm text-white" href={`/${page}`}>{navLabels.get(page)?.toUpperCase()}</a>	
						</li>
					);
				})}
			</ul>
		</div>
	</body>
</html>
<style>
	@font-face {
		font-family: 'FuturaLTW01-Medium';
		src: url('../Futura LT W01 Medium.ttf') format('ttf');
		src: url('../Futura LT W01 Medium.woff') format('woff');
		src: url('../Futura LT W01 Medium.woff2') format('woff2');
	}

	@font-face {
		font-family: 'Druk';
		src: url('../DrukWide-Medium.ttf') format('ttf');
		src: url('../DrukWide-Medium.woff') format('woff');
	}

	.wait-for-hov {
		background: linear-gradient(to top right, rgb(52 211 153),rgb(28, 130, 225)) no-repeat
		calc(200% - var(--i,0)*100%) 100% / 200% calc(100%*var(--i,0) + .08em); 
		transition: .2s calc(var(--i,0)*.2s), background-position .2s calc(.2s - calc(var(--i,0)*.2s));
	}

	.wait-for-hov:hover {
		--i:1;
	}

	h1 {
		text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.6);
	}
</style>